{"version":3,"sources":["constants/menu.js","containers/CanvasBoard/index.module.scss","components/StrokeWidthPicker/index.module.scss","components/ColorPicker/index.module.scss","containers/CanvasBoard/index.js","redux/actionTypes/menu.js","redux/actions/menu.js","utils/createActions.js","components/ColorPicker/index.js","components/StrokeWidthPicker/index.js","containers/Menu/index.js","app.js","redux/reducers/canvas.js","redux/reducers/menu.js","redux/reducers/index.js","redux/store.js","redux/actionTypes/canvas.js","index.js"],"names":["MENU_ITEMS","PEN","COLOR_PICKER","ERASER","HIGHLIGHER","CLEAR","PEN_STROKE_WIDTH","module","exports","CanvasBoard","props","canvasRef","useRef","highlighterCanvasRef","useState","canvasHeight","setCanvasHeight","canvasWidth","setCanvasWidth","coordinates","setCoordinates","isDrawingLine","setIsDrawingLine","isErasing","setIsErasing","isHighlighting","setIsHighlighting","useSelector","state","menu","color","hue","saturation","lightness","selectedMenuItem","selectedStrokeWidth","useLayoutEffect","window","innerHeight","innerWidth","current","canvasElement","__DB_CANVAS_ELEMENT","getContext","__DB_CANVAS_PEN_CONTEXT_2D","__DB_CANVAS_HIGHLIGHTER_ELEMENT","__DB_CANVAS_HIGHLIGHTER_CONTEXT_2D","ctx","getCanvasPenContext","highlighterCtx","getCanvasHighlighterContext","clearRect","canvas","width","height","initEraser","handleMouseMoveEvent","event","clientX","clientY","lineTo","stroke","drawLine","drawHighlightedLine","handleMouseDownEvent","strokeStyle","lineWidth","lineCap","beginPath","moveTo","initLine","initHighlighter","handleMouseUpEvent","closePath","className","cx","styles","zIndex1","ref","onMouseMove","onMouseDown","onMouseUp","highlighterCanvas","UPDATE_COLOR","TOGGLE_MENU_ITEM","UPDATE_STROKE_WIDTH","createActions","types","actions","Object","values","forEach","type","camelCase","payload","menuTypes","HSLColorBox","memo","onUpdateHsl","colorGrid","i","j","push","key","colorBoxItem","selected","style","backgroundColor","data-saturation","data-lightness","onClick","target","includes","dataset","newSaturation","newLightness","Number","stopPropagation","colorBox","HSLColorLine","colorLine","colorLineItem","selectedColor","onColorUpdate","hide","container","onStrokeWidthItemClick","map","itemWrapper","active","item","background","MenuItems","lazy","Menu","dispatch","useDispatch","handleColorUpdate","useCallback","hsl","menuActions","updateColor","handleMenuItemClick","toggleMenuItem","handleStrokeWidthItemClick","updateStrokeWidth","onMenuItemClick","Header","App","fallback","initState","init","combineReducers","middlewares","store","createStore","rootReducer","applyMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.149680e6.chunk.js","sourcesContent":["const MENU_ITEMS = {\n  PEN: 'pen',\n  COLOR_PICKER: 'color picker',\n  ERASER: 'eraser',\n  HIGHLIGHER: 'highlighter',\n  CLEAR: 'clear'\n};\n\nconst PEN_STROKE_WIDTH = [1, 3, 5];\n\nexport { MENU_ITEMS, PEN_STROKE_WIDTH };\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"canvas\":\"CanvasBoard_canvas__2FNkR\",\"highlighterCanvas\":\"CanvasBoard_highlighterCanvas__25sLo\",\"hide\":\"CanvasBoard_hide__1vutl\",\"zIndex1\":\"CanvasBoard_zIndex1__3PFzr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"StrokeWidthPicker_container__2ftFI\",\"itemWrapper\":\"StrokeWidthPicker_itemWrapper__3HtM2\",\"active\":\"StrokeWidthPicker_active__32ssn\",\"item\":\"StrokeWidthPicker_item__2uMHx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ColorPicker_container__2Qg69\",\"hide\":\"ColorPicker_hide__13WzM\",\"colorLine\":\"ColorPicker_colorLine__M5iOw\",\"colorLineItem\":\"ColorPicker_colorLineItem__2zn0q\",\"selected\":\"ColorPicker_selected__1Z3BX\",\"colorBox\":\"ColorPicker_colorBox__3PkPY\",\"colorBoxItem\":\"ColorPicker_colorBoxItem__12vQ9\",\"selectedColor\":\"ColorPicker_selectedColor__1GqsG\"};","import React, { useRef, useLayoutEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport cx from 'classnames';\nimport { MENU_ITEMS } from 'constants/menu';\nimport styles from './index.module.scss';\n\nconst CanvasBoard = (props) => {\n  const canvasRef = useRef();\n  const highlighterCanvasRef = useRef();\n\n  const [canvasHeight, setCanvasHeight] = useState(500);\n  const [canvasWidth, setCanvasWidth] = useState(500);\n  const [coordinates, setCoordinates] = useState([0, 0]);\n  const [isDrawingLine, setIsDrawingLine] = useState(false);\n  const [isErasing, setIsErasing] = useState(false);\n  const [isHighlighting, setIsHighlighting] = useState(false);\n  const { hue, saturation, lightness } = useSelector(\n    (state) => state.menu.color\n  );\n  const selectedMenuItem = useSelector((state) => state.menu.selectedMenuItem);\n  const selectedStrokeWidth = useSelector((state) => state.menu.selectedStrokeWidth);\n\n  useLayoutEffect(() => {\n    setCanvasHeight(window.innerHeight);\n    setCanvasWidth(window.innerWidth);\n    if (canvasRef?.current) {\n      const canvasElement = canvasRef.current;\n      window.__DB_CANVAS_ELEMENT = canvasElement;\n      if (canvasElement.getContext) {\n        window.__DB_CANVAS_PEN_CONTEXT_2D = canvasElement.getContext('2d');\n      }\n    }\n    if (highlighterCanvasRef?.current) {\n      const canvasElement = highlighterCanvasRef.current;\n      window.__DB_CANVAS_HIGHLIGHTER_ELEMENT = canvasElement;\n      if (canvasElement.getContext) {\n        window.__DB_CANVAS_HIGHLIGHTER_CONTEXT_2D = canvasElement.getContext(\n          '2d'\n        );\n      }\n    }\n    return () => {\n      delete window.__DB_CANVAS_PEN_CONTEXT_2D;\n      delete window.__DB_CANVAS_HIGHLIGHTER_CONTEXT_2D;\n      delete window.__DB_CANVAS_ELEMENT;\n    };\n  }, []);\n\n  useLayoutEffect(() => {\n    if(selectedMenuItem === MENU_ITEMS.CLEAR) {\n      const ctx = getCanvasPenContext();\n      const highlighterCtx = getCanvasHighlighterContext();\n      ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n      highlighterCtx.clearRect(0, 0, highlighterCtx.canvas.width, highlighterCtx.canvas.height);\n    }\n  }, [selectedMenuItem]);\n\n  const getCanvasPenContext = () => {\n    return window.__DB_CANVAS_PEN_CONTEXT_2D ?? {};\n  };\n\n  const getCanvasHighlighterContext = () => {\n    return window.__DB_CANVAS_HIGHLIGHTER_CONTEXT_2D ?? {};\n  };\n\n  const initLine = () => {\n    setIsDrawingLine(true);\n    const ctx = getCanvasPenContext();\n    const highlighterCtx = getCanvasHighlighterContext();\n    highlighterCtx.clearRect(\n      0,\n      0,\n      highlighterCtx.canvas.width,\n      highlighterCtx.canvas.height\n    );\n    ctx.strokeStyle = `hsl(${hue} ${saturation}% ${lightness}%)`;\n    ctx.lineWidth = selectedStrokeWidth;\n    ctx.lineCap = 'round';\n    ctx.beginPath();\n    ctx.moveTo(...coordinates);\n  };\n\n  const initEraser = () => {\n    setIsErasing(true);\n    const ctx = getCanvasPenContext();\n    ctx.clearRect(coordinates[0] - 20, coordinates[1] - 20, 40, 40);\n  };\n\n  const initHighlighter = () => {\n    setIsHighlighting(true);\n    const ctx = getCanvasHighlighterContext();\n    ctx.strokeStyle = `hsl(${hue} ${saturation}% ${lightness}%)`;\n    ctx.lineWidth = 5;\n    ctx.lineCap = 'round';\n    ctx.beginPath();\n    ctx.moveTo(...coordinates);\n  };\n\n  const drawLine = () => {\n    const ctx = getCanvasPenContext();\n    ctx.lineTo(...coordinates);\n    ctx.stroke();\n  };\n\n  const drawHighlightedLine = () => {\n    const ctx = getCanvasHighlighterContext();\n    ctx.lineTo(...coordinates);\n    ctx.stroke();\n  };\n\n  const disposeLine = () => {\n    setIsDrawingLine(false);\n    const ctx = getCanvasPenContext();\n    ctx.closePath();\n  };\n\n  const disposeEraser = () => {\n    setIsErasing(false);\n  };\n\n  const disposeHighlighter = () => {\n    setIsHighlighting(false);\n    const ctx = getCanvasHighlighterContext();\n    ctx.closePath();\n  };\n\n  const handleMouseMoveEvent = (event) => {\n    setCoordinates([event.clientX, event.clientY]);\n    switch (selectedMenuItem) {\n      case MENU_ITEMS.PEN:\n        isDrawingLine && drawLine();\n        break;\n      case MENU_ITEMS.ERASER:\n        isErasing && initEraser();\n        break;\n      case MENU_ITEMS.HIGHLIGHER:\n        isHighlighting && drawHighlightedLine();\n        break;\n      default:\n    }\n  };\n\n  const handleMouseDownEvent = (event) => {\n    switch (selectedMenuItem) {\n      case MENU_ITEMS.PEN:\n        initLine();\n        break;\n      case MENU_ITEMS.ERASER:\n        initEraser();\n        break;\n      case MENU_ITEMS.HIGHLIGHER:\n        initHighlighter();\n        break;\n      default:\n    }\n  };\n\n  const handleMouseUpEvent = (event) => {\n    switch (selectedMenuItem) {\n      case MENU_ITEMS.PEN:\n        disposeLine();\n        break;\n      case MENU_ITEMS.ERASER:\n        disposeEraser();\n        break;\n      case MENU_ITEMS.HIGHLIGHER:\n        disposeHighlighter();\n        break;\n      default:\n    }\n  };\n\n  return (\n    <>\n      <canvas\n        className={cx(styles.canvas, {\n          [styles.zIndex1]: selectedMenuItem !== MENU_ITEMS.HIGHLIGHER,\n        })}\n        ref={canvasRef}\n        height={canvasHeight}\n        width={canvasWidth}\n        onMouseMove={handleMouseMoveEvent}\n        onMouseDown={handleMouseDownEvent}\n        onMouseUp={handleMouseUpEvent}\n      >\n        Canvas is not supported in this browser!\n      </canvas>\n      <canvas\n        className={cx(styles.highlighterCanvas, {\n          [styles.zIndex1]: selectedMenuItem === MENU_ITEMS.HIGHLIGHER,\n        })}\n        ref={highlighterCanvasRef}\n        height={window.innerHeight}\n        width={window.innerWidth}\n        onMouseMove={handleMouseMoveEvent}\n        onMouseDown={handleMouseDownEvent}\n        onMouseUp={handleMouseUpEvent}\n      >\n        Canvas is not supported in this browser!\n      </canvas>\n    </>\n  );\n};\n\nexport default CanvasBoard;\n","const UPDATE_COLOR = 'UPDATE_COLOR';\nconst TOGGLE_MENU_ITEM = 'TOGGLE_MENU_ITEM';\nconst UPDATE_STROKE_WIDTH = 'UPDATE_STROKE_WIDTH';\n\nexport {\n  UPDATE_COLOR,\n  TOGGLE_MENU_ITEM,\n  UPDATE_STROKE_WIDTH,\n};","import * as menuTypes from 'redux/actionTypes/menu';\nimport createActions from 'utils/createActions';\n\nexport default createActions(menuTypes);","import camelCase from 'lodash/camelCase';\n\nexport default function createActions(types) {\n  const actions = {};\n  Object.values(types).forEach(type => {\n    actions[camelCase(type)] = payload => ({ type, payload });\n  });\n  return actions;\n}","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport styles from './index.module.scss';\n\nconst HSLColorBox = memo(({ hue, saturation, lightness, onUpdateHsl }) => {\n  const colorGrid = [];\n  const handleColorBoxItemClick = (event) => {\n    if (event.target.className.includes('colorBoxItem')) {\n      const {\n        saturation: newSaturation = saturation,\n        lightness: newLightness = lightness,\n      } = event.target.dataset;\n      onUpdateHsl({\n        hue,\n        saturation: Number(newSaturation),\n        lightness: Number(newLightness),\n      });\n    }\n    event.stopPropagation();\n  };\n  for (let i = 100; i >= 0; i--) {\n    for (let j = 0; j <= 100; j++) {\n      colorGrid.push(\n        <div\n          key={`color-box-item-${i}-${j}`}\n          className={cx(styles.colorBoxItem, {\n            [styles.selected]: i === saturation && j === lightness,\n          })}\n          style={{\n            backgroundColor: `hsl(${hue}, ${i}%, ${j}%)`,\n          }}\n          data-saturation={i}\n          data-lightness={j}\n        />\n      );\n    }\n  }\n  return (\n    <div onClick={handleColorBoxItemClick} className={styles.colorBox}>\n      {colorGrid}\n    </div>\n  );\n});\n\nHSLColorBox.propTypes = {\n  hue: PropTypes.number,\n  saturation: PropTypes.number,\n  lightness: PropTypes.number,\n  onUpdateHsl: PropTypes.func,\n};\n\nconst HSLColorLine = ({ hue, saturation, lightness, onUpdateHsl }) => {\n  const colorLine = [];\n  const handleColorLineItemClick = (newHue) =>\n    onUpdateHsl({ hue: newHue, saturation, lightness });\n  for (let i = 0; i < 360; i++) {\n    colorLine.push(\n      <div\n        key={`color-line-item-${i}`}\n        className={cx(styles.colorLineItem, {\n          [styles.selected]: hue === i,\n        })}\n        style={{ backgroundColor: `hsl(${i}, 100%, 50%)` }}\n        onClick={() => handleColorLineItemClick(i)}\n      />\n    );\n  }\n  return <div className={styles.colorLine}>{colorLine}</div>;\n};\n\nHSLColorLine.propTypes = {\n  hue: PropTypes.number,\n  saturation: PropTypes.number,\n  lightness: PropTypes.number,\n  onUpdateHsl: PropTypes.func,\n};\n\nconst ColorPicker = ({ selectedColor, onColorUpdate, hide }) => {\n  return (\n    <div className={cx(styles.container, {\n      [styles.hide]: hide\n    })}>\n      <HSLColorLine {...selectedColor} onUpdateHsl={onColorUpdate} />\n      <HSLColorBox {...selectedColor} onUpdateHsl={onColorUpdate} />\n    </div>\n  );\n};\n\nColorPicker.propTypes = {\n  selectedColor: PropTypes.object,\n  onColorUpdate: PropTypes.func,\n  hide: PropTypes.bool,\n};\n\nexport default memo(ColorPicker);\n","import React, { memo } from 'react';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport { PEN_STROKE_WIDTH } from 'constants/menu';\nimport styles from './index.module.scss';\n\nconst StrokeWidthPicker = ({\n  selectedColor,\n  onStrokeWidthItemClick,\n  selectedStrokeWidth,\n}) => {\n  return (\n    <div className={styles.container}>\n      {PEN_STROKE_WIDTH.map((width) => (\n        <div\n          key={`stroke-width-item-${width}`}\n          className={cx(styles.itemWrapper, {\n            [styles.active]: width === selectedStrokeWidth,\n          })}\n          onClick={() => onStrokeWidthItemClick(width)}\n        >\n          <div\n            className={cx(styles.item)}\n            style={{\n              background: `hsl(${selectedColor.hue} ${selectedColor.saturation}% ${selectedColor.lightness}%)`,\n              height: width,\n            }}\n          />\n        </div>\n      ))}\n    </div>\n  );\n};\n\nStrokeWidthPicker.propTypes = {\n  selectedColor: PropTypes.object,\n  onStrokeWidthItemClick: PropTypes.func,\n  selectedStrokeWidth: PropTypes.number,\n};\n\nexport default memo(StrokeWidthPicker);\n","import React, { useCallback, lazy } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport menuActions from 'redux/actions/menu';\nimport { MENU_ITEMS } from 'constants/menu';\nimport ColorPicker from 'components/ColorPicker';\nimport StrokeWidthPicker from 'components/StrokeWidthPicker';\nimport styles from './index.module.scss';\n\nconst MenuItems = lazy(() => import('components/MenuItems'));\n\nconst Menu = (props) => {\n  const dispatch = useDispatch();\n  const color = useSelector((state) => state.menu.color);\n  const selectedMenuItem = useSelector((state) => state.menu.selectedMenuItem);\n  const selectedStrokeWidth = useSelector(\n    (state) => state.menu.selectedStrokeWidth\n  );\n\n  const handleColorUpdate = useCallback(\n    (hsl) => dispatch(menuActions.updateColor(hsl)),\n    [dispatch]\n  );\n\n  const handleMenuItemClick = useCallback(\n    (item) => dispatch(menuActions.toggleMenuItem(item)),\n    [dispatch]\n  );\n\n  const handleStrokeWidthItemClick = useCallback(\n    (width) => dispatch(menuActions.updateStrokeWidth(width)),\n    [dispatch]\n  );\n\n  return (\n    <div className={styles.container}>\n      <MenuItems\n        selectedMenuItem={selectedMenuItem}\n        onMenuItemClick={handleMenuItemClick}\n      />\n      {/* {selectedMenuItem === MENU_ITEMS.COLOR_PICKER && ( */}\n      <ColorPicker\n        hide={selectedMenuItem !== MENU_ITEMS.COLOR_PICKER}\n        onColorUpdate={handleColorUpdate}\n        selectedColor={color}\n      />\n      {/* )} */}\n      {selectedMenuItem === MENU_ITEMS.PEN && (\n        <StrokeWidthPicker\n          selectedColor={color}\n          onStrokeWidthItemClick={handleStrokeWidthItemClick}\n          selectedStrokeWidth={selectedStrokeWidth}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Menu;\n","import React, { lazy, Suspense } from 'react';\nimport CanvasBoard from 'containers/CanvasBoard';\nimport Menu from 'containers/Menu';\nconst Header = lazy(() => import('components/Header'));\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Suspense fallback={'loading...'}>\n        <Header />\n        <CanvasBoard />\n        <Menu />\n      </Suspense>\n    </div>\n  );\n}\n\nexport default App;\n","import * as canvasTypes from 'redux/actionTypes/canvas';\n\nconst initState = {\n  init: false,\n};\n\nexport default function(state = initState, { type, payload }) {\n  switch(type) {\n    case canvasTypes.CANVAS_INIT:\n      return {\n        ...state,\n        init: true,\n      };\n    default:\n      return state;\n  }\n}","import * as menuTypes from 'redux/actionTypes/menu';\nimport { PEN_STROKE_WIDTH } from 'constants/menu';\n\nconst initState = {\n  color: {\n    hue: 0,\n    saturation: 100,\n    lightness: 50,\n  },\n  selectedMenuItem: '',\n  selectedStrokeWidth: PEN_STROKE_WIDTH[0],\n};\n\nexport default function menuReducer(state = initState, { type, payload }) {\n  switch(type) {\n    case menuTypes.UPDATE_COLOR:\n      return {\n        ...state,\n        color: payload,\n      };\n    case menuTypes.TOGGLE_MENU_ITEM:\n      return {\n        ...state,\n        selectedMenuItem: payload,\n      };\n    case menuTypes.UPDATE_STROKE_WIDTH:\n      return {\n        ...state,\n        selectedStrokeWidth: payload,\n      }\n    default:\n      return state;\n  }\n}","import { combineReducers } from 'redux';\nimport canvas from './canvas';\nimport menu from './menu';\n\nexport default combineReducers({\n  canvas,\n  menu,\n});\n","import { createStore, applyMiddleware } from 'redux';\nimport rootReducer from 'redux/reducers';\n\nconst bindMiddlewares = middlewares => {\n  if(process.env.NODE_ENV !== 'production') {\n    const { composeWithDevTools } = require('redux-devtools-extension');\n    return composeWithDevTools(applyMiddleware(...middlewares));\n  }\n  return applyMiddleware(...middlewares);\n}\n\nconst store = createStore(rootReducer, bindMiddlewares([]));\n\nexport default store;","const CANVAS_INIT = 'CANVAS_INIT';\n\nexport {\n  CANVAS_INIT,\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './app';\nimport store from './redux/store';\nimport './styles/index.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}