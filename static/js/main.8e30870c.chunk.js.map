{"version":3,"sources":["constants/menu.js","containers/CanvasBoard/index.module.scss","components/StrokeWidthPicker/index.module.scss","components/Header/index.module.scss","components/ColorPicker/index.module.scss","containers/CanvasBoard/index.js","redux/actionTypes/menu.js","redux/actions/menu.js","utils/createActions.js","components/ColorPicker/index.js","components/StrokeWidthPicker/index.js","containers/Menu/index.js","components/Header/index.js","app.js","redux/reducers/canvas.js","redux/reducers/menu.js","redux/reducers/index.js","redux/store.js","redux/actionTypes/canvas.js","index.js"],"names":["MENU_ITEMS","PEN","COLOR_PICKER","ERASER","HIGHLIGHER","CLEAR","UNDO","REDO","PEN_STROKE_WIDTH","module","exports","CanvasBoard","props","canvasRef","useRef","highlighterCanvasRef","useState","canvasHeight","setCanvasHeight","canvasWidth","setCanvasWidth","coordinates","setCoordinates","isDrawingLine","setIsDrawingLine","isErasing","setIsErasing","isHighlighting","setIsHighlighting","canvasStates","setCanvasStates","currentCanvasState","setCurrentCanvasState","useSelector","state","menu","color","hue","saturation","lightness","selectedMenuItem","selectedStrokeWidth","useLayoutEffect","window","innerHeight","innerWidth","current","canvasElement","__DB_CANVAS_ELEMENT","getContext","__DB_CANVAS_PEN_CONTEXT_2D","__DB_CANVAS_HIGHLIGHTER_ELEMENT","__DB_CANVAS_HIGHLIGHTER_CONTEXT_2D","ctx","getCanvasPenContext","clearCanvas","includes","undoCanvas","length","redoCanvas","highlighterCtx","getCanvasHighlighterContext","clearRect","canvas","width","height","newCanvasState","image","Image","src","onload","drawImage","initEraser","handleMouseMoveEvent","event","clientX","clientY","lineTo","stroke","drawLine","drawHighlightedLine","handleMouseDownEvent","strokeStyle","lineWidth","lineCap","beginPath","moveTo","initLine","initHighlighter","handleMouseUpEvent","penCanvas","getPenCanvasElement","closePath","toDataURL","newCanvasStates","className","cx","styles","zIndex1","ref","onMouseMove","onMouseDown","onMouseUp","highlighterCanvas","UPDATE_COLOR","TOGGLE_MENU_ITEM","UPDATE_STROKE_WIDTH","createActions","types","actions","Object","values","forEach","type","camelCase","payload","menuTypes","HSLColorBox","memo","onUpdateHsl","colorGrid","i","j","push","key","colorBoxItem","selected","style","backgroundColor","data-saturation","data-lightness","onClick","target","dataset","newSaturation","newLightness","Number","stopPropagation","colorBox","HSLColorLine","colorLine","colorLineItem","selectedColor","onColorUpdate","hide","container","onStrokeWidthItemClick","map","itemWrapper","active","item","background","MenuItems","lazy","Menu","dispatch","useDispatch","handleColorUpdate","useCallback","hsl","menuActions","updateColor","handleMenuItemClick","toggleMenuItem","handleStrokeWidthItemClick","updateStrokeWidth","onMenuItemClick","App","fallback","initState","init","combineReducers","middlewares","store","createStore","rootReducer","applyMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8e30870c.chunk.js","sourcesContent":["const MENU_ITEMS = {\n  PEN: 'pen',\n  COLOR_PICKER: 'color picker',\n  ERASER: 'eraser',\n  HIGHLIGHER: 'highlighter',\n  CLEAR: 'clear',\n  UNDO: 'undo',\n  REDO: 'redo',\n};\n\nconst PEN_STROKE_WIDTH = [1, 3, 5];\n\nexport { MENU_ITEMS, PEN_STROKE_WIDTH };\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"canvas\":\"CanvasBoard_canvas__2FNkR\",\"highlighterCanvas\":\"CanvasBoard_highlighterCanvas__25sLo\",\"hide\":\"CanvasBoard_hide__1vutl\",\"zIndex1\":\"CanvasBoard_zIndex1__3PFzr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"StrokeWidthPicker_container__2ftFI\",\"itemWrapper\":\"StrokeWidthPicker_itemWrapper__3HtM2\",\"active\":\"StrokeWidthPicker_active__32ssn\",\"item\":\"StrokeWidthPicker_item__2uMHx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Header_container__7iTTy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ColorPicker_container__2Qg69\",\"hide\":\"ColorPicker_hide__13WzM\",\"colorLine\":\"ColorPicker_colorLine__M5iOw\",\"colorLineItem\":\"ColorPicker_colorLineItem__2zn0q\",\"selected\":\"ColorPicker_selected__1Z3BX\",\"colorBox\":\"ColorPicker_colorBox__3PkPY\",\"colorBoxItem\":\"ColorPicker_colorBoxItem__12vQ9\",\"selectedColor\":\"ColorPicker_selectedColor__1GqsG\"};","import React, { useRef, useLayoutEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport cx from 'classnames';\nimport { MENU_ITEMS } from 'constants/menu';\nimport styles from './index.module.scss';\n\nconst CanvasBoard = (props) => {\n  const canvasRef = useRef();\n  const highlighterCanvasRef = useRef();\n\n  const [canvasHeight, setCanvasHeight] = useState(500);\n  const [canvasWidth, setCanvasWidth] = useState(500);\n  const [coordinates, setCoordinates] = useState([0, 0]);\n  const [isDrawingLine, setIsDrawingLine] = useState(false);\n  const [isErasing, setIsErasing] = useState(false);\n  const [isHighlighting, setIsHighlighting] = useState(false);\n  const [canvasStates, setCanvasStates] = useState([]);\n  const [currentCanvasState, setCurrentCanvasState] = useState(-1);\n  const { hue, saturation, lightness } = useSelector(\n    (state) => state.menu.color\n  );\n  const selectedMenuItem = useSelector((state) => state.menu.selectedMenuItem);\n  const selectedStrokeWidth = useSelector(\n    (state) => state.menu.selectedStrokeWidth\n  );\n\n  useLayoutEffect(() => {\n    setCanvasHeight(window.innerHeight);\n    setCanvasWidth(window.innerWidth);\n    if (canvasRef?.current) {\n      const canvasElement = canvasRef.current;\n      window.__DB_CANVAS_ELEMENT = canvasElement;\n      if (canvasElement.getContext) {\n        window.__DB_CANVAS_PEN_CONTEXT_2D = canvasElement.getContext('2d');\n      }\n    }\n    if (highlighterCanvasRef?.current) {\n      const canvasElement = highlighterCanvasRef.current;\n      window.__DB_CANVAS_HIGHLIGHTER_ELEMENT = canvasElement;\n      if (canvasElement.getContext) {\n        window.__DB_CANVAS_HIGHLIGHTER_CONTEXT_2D = canvasElement.getContext(\n          '2d'\n        );\n      }\n    }\n    return () => {\n      delete window.__DB_CANVAS_PEN_CONTEXT_2D;\n      delete window.__DB_CANVAS_HIGHLIGHTER_CONTEXT_2D;\n      delete window.__DB_CANVAS_ELEMENT;\n    };\n  }, []);\n\n  useLayoutEffect(() => {\n    const ctx = getCanvasPenContext();\n    if (selectedMenuItem === MENU_ITEMS.CLEAR) {\n      clearCanvas();\n      setCanvasStates([]);\n    } else if (\n      selectedMenuItem.includes(MENU_ITEMS.UNDO) &&\n      currentCanvasState >= 0\n    ) {\n      undoCanvas(ctx);\n    } else if (\n      selectedMenuItem.includes(MENU_ITEMS.REDO) &&\n      currentCanvasState < canvasStates.length\n    ) {\n      redoCanvas(ctx);\n    }\n  }, [selectedMenuItem]);\n\n  const clearCanvas = () => {\n    const ctx = getCanvasPenContext();\n    const highlighterCtx = getCanvasHighlighterContext();\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n    highlighterCtx.clearRect(\n      0,\n      0,\n      highlighterCtx.canvas.width,\n      highlighterCtx.canvas.height\n    );\n  };\n\n  const undoCanvas = (ctx) => {\n    const newCanvasState = currentCanvasState - 1;\n    setCurrentCanvasState(newCanvasState);\n    clearCanvas();\n    if (newCanvasState >= 0 && canvasStates[newCanvasState]) {\n      const image = new Image();\n      image.src = canvasStates[newCanvasState];\n      image.onload = function () {\n        ctx.drawImage(image, 0, 0);\n      };\n    }\n  };\n\n  const redoCanvas = (ctx) => {\n    const newCanvasState = currentCanvasState + 1;\n    if (newCanvasState < canvasStates.length && canvasStates[newCanvasState]) {\n      clearCanvas();\n      setCurrentCanvasState(newCanvasState);\n      const image = new Image();\n      image.src = canvasStates[newCanvasState];\n      image.onload = function () {\n        ctx.drawImage(image, 0, 0);\n      };\n    }\n  };\n\n  const getCanvasPenContext = () => window.__DB_CANVAS_PEN_CONTEXT_2D ?? {};\n\n  const getPenCanvasElement = () => window.__DB_CANVAS_ELEMENT ?? {};\n\n  const getCanvasHighlighterContext = () =>\n    window.__DB_CANVAS_HIGHLIGHTER_CONTEXT_2D ?? {};\n\n  const initLine = () => {\n    setIsDrawingLine(true);\n    const ctx = getCanvasPenContext();\n    const highlighterCtx = getCanvasHighlighterContext();\n    highlighterCtx.clearRect(\n      0,\n      0,\n      highlighterCtx.canvas.width,\n      highlighterCtx.canvas.height\n    );\n    ctx.strokeStyle = `hsl(${hue} ${saturation}% ${lightness}%)`;\n    ctx.lineWidth = selectedStrokeWidth;\n    ctx.lineCap = 'round';\n    ctx.beginPath();\n    ctx.moveTo(...coordinates);\n  };\n\n  const initEraser = () => {\n    setIsErasing(true);\n    const ctx = getCanvasPenContext();\n    ctx.clearRect(coordinates[0] - 20, coordinates[1] - 20, 40, 40);\n  };\n\n  const initHighlighter = () => {\n    setIsHighlighting(true);\n    const ctx = getCanvasHighlighterContext();\n    ctx.strokeStyle = `hsl(${hue} ${saturation}% ${lightness}%)`;\n    ctx.lineWidth = 5;\n    ctx.lineCap = 'round';\n    ctx.beginPath();\n    ctx.moveTo(...coordinates);\n  };\n\n  const drawLine = () => {\n    const ctx = getCanvasPenContext();\n    ctx.lineTo(...coordinates);\n    ctx.stroke();\n  };\n\n  const drawHighlightedLine = () => {\n    const ctx = getCanvasHighlighterContext();\n    ctx.lineTo(...coordinates);\n    ctx.stroke();\n  };\n\n  const disposeLine = () => {\n    setIsDrawingLine(false);\n    const ctx = getCanvasPenContext();\n    ctx.closePath();\n  };\n\n  const disposeEraser = () => {\n    setIsErasing(false);\n  };\n\n  const disposeHighlighter = () => {\n    setIsHighlighting(false);\n    const ctx = getCanvasHighlighterContext();\n    ctx.closePath();\n  };\n\n  const handleMouseMoveEvent = (event) => {\n    setCoordinates([event.clientX, event.clientY]);\n    switch (selectedMenuItem) {\n      case MENU_ITEMS.PEN:\n        isDrawingLine && drawLine();\n        break;\n      case MENU_ITEMS.ERASER:\n        isErasing && initEraser();\n        break;\n      case MENU_ITEMS.HIGHLIGHER:\n        isHighlighting && drawHighlightedLine();\n        break;\n      default:\n    }\n  };\n\n  const handleMouseDownEvent = (event) => {\n    switch (selectedMenuItem) {\n      case MENU_ITEMS.PEN:\n        initLine();\n        break;\n      case MENU_ITEMS.ERASER:\n        initEraser();\n        break;\n      case MENU_ITEMS.HIGHLIGHER:\n        initHighlighter();\n        break;\n      default:\n    }\n  };\n\n  const handleMouseUpEvent = (event) => {\n    const penCanvas = getPenCanvasElement();\n    switch (selectedMenuItem) {\n      case MENU_ITEMS.PEN:\n        disposeLine();\n        break;\n      case MENU_ITEMS.ERASER:\n        disposeEraser();\n        break;\n      case MENU_ITEMS.HIGHLIGHER:\n        disposeHighlighter();\n        break;\n      default:\n    }\n    if (penCanvas?.toDataURL) {\n      const newCanvasStates = [...canvasStates, penCanvas.toDataURL()]\n      setCanvasStates(newCanvasStates);\n      setCurrentCanvasState(newCanvasStates.length - 1);\n    }\n  };\n\n  return (\n    <>\n      <canvas\n        className={cx(styles.canvas, {\n          [styles.zIndex1]: selectedMenuItem !== MENU_ITEMS.HIGHLIGHER,\n        })}\n        ref={canvasRef}\n        height={canvasHeight}\n        width={canvasWidth}\n        onMouseMove={handleMouseMoveEvent}\n        onMouseDown={handleMouseDownEvent}\n        onMouseUp={handleMouseUpEvent}\n      >\n        Canvas is not supported in this browser!\n      </canvas>\n      <canvas\n        className={cx(styles.highlighterCanvas, {\n          [styles.zIndex1]: selectedMenuItem === MENU_ITEMS.HIGHLIGHER,\n        })}\n        ref={highlighterCanvasRef}\n        height={window.innerHeight}\n        width={window.innerWidth}\n        onMouseMove={handleMouseMoveEvent}\n        onMouseDown={handleMouseDownEvent}\n        onMouseUp={handleMouseUpEvent}\n      >\n        Canvas is not supported in this browser!\n      </canvas>\n    </>\n  );\n};\n\nexport default CanvasBoard;\n","const UPDATE_COLOR = 'UPDATE_COLOR';\nconst TOGGLE_MENU_ITEM = 'TOGGLE_MENU_ITEM';\nconst UPDATE_STROKE_WIDTH = 'UPDATE_STROKE_WIDTH';\n\nexport {\n  UPDATE_COLOR,\n  TOGGLE_MENU_ITEM,\n  UPDATE_STROKE_WIDTH,\n};","import * as menuTypes from 'redux/actionTypes/menu';\nimport createActions from 'utils/createActions';\n\nexport default createActions(menuTypes);","import camelCase from 'lodash/camelCase';\n\nexport default function createActions(types) {\n  const actions = {};\n  Object.values(types).forEach(type => {\n    actions[camelCase(type)] = payload => ({ type, payload });\n  });\n  return actions;\n}","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport styles from './index.module.scss';\n\nconst HSLColorBox = memo(({ hue, saturation, lightness, onUpdateHsl }) => {\n  const colorGrid = [];\n  const handleColorBoxItemClick = (event) => {\n    if (event.target.className.includes('colorBoxItem')) {\n      const {\n        saturation: newSaturation = saturation,\n        lightness: newLightness = lightness,\n      } = event.target.dataset;\n      onUpdateHsl({\n        hue,\n        saturation: Number(newSaturation),\n        lightness: Number(newLightness),\n      });\n    }\n    event.stopPropagation();\n  };\n  for (let i = 100; i >= 0; i--) {\n    for (let j = 0; j <= 100; j++) {\n      colorGrid.push(\n        <div\n          key={`color-box-item-${i}-${j}`}\n          className={cx(styles.colorBoxItem, {\n            [styles.selected]: i === saturation && j === lightness,\n          })}\n          style={{\n            backgroundColor: `hsl(${hue}, ${i}%, ${j}%)`,\n          }}\n          data-saturation={i}\n          data-lightness={j}\n        />\n      );\n    }\n  }\n  return (\n    <div onClick={handleColorBoxItemClick} className={styles.colorBox}>\n      {colorGrid}\n    </div>\n  );\n});\n\nHSLColorBox.propTypes = {\n  hue: PropTypes.number,\n  saturation: PropTypes.number,\n  lightness: PropTypes.number,\n  onUpdateHsl: PropTypes.func,\n};\n\nconst HSLColorLine = memo(({ hue, saturation, lightness, onUpdateHsl }) => {\n  const colorLine = [];\n  const handleColorLineItemClick = (newHue) =>\n    onUpdateHsl({ hue: newHue, saturation, lightness });\n  for (let i = 0; i < 360; i++) {\n    colorLine.push(\n      <div\n        key={`color-line-item-${i}`}\n        className={cx(styles.colorLineItem, {\n          [styles.selected]: hue === i,\n        })}\n        style={{ backgroundColor: `hsl(${i}, 100%, 50%)` }}\n        onClick={() => handleColorLineItemClick(i)}\n      />\n    );\n  }\n  return <div className={styles.colorLine}>{colorLine}</div>;\n});\n\nHSLColorLine.propTypes = {\n  hue: PropTypes.number,\n  saturation: PropTypes.number,\n  lightness: PropTypes.number,\n  onUpdateHsl: PropTypes.func,\n};\n\nconst ColorPicker = ({ selectedColor, onColorUpdate, hide }) => {\n  return (\n    <div className={cx(styles.container, {\n      [styles.hide]: hide\n    })}>\n      <HSLColorLine {...selectedColor} onUpdateHsl={onColorUpdate} />\n      <HSLColorBox {...selectedColor} onUpdateHsl={onColorUpdate} />\n    </div>\n  );\n};\n\nColorPicker.propTypes = {\n  selectedColor: PropTypes.object,\n  onColorUpdate: PropTypes.func,\n  hide: PropTypes.bool,\n};\n\nexport default memo(ColorPicker);\n","import React, { memo } from 'react';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport { PEN_STROKE_WIDTH } from 'constants/menu';\nimport styles from './index.module.scss';\n\nconst StrokeWidthPicker = ({\n  selectedColor,\n  onStrokeWidthItemClick,\n  selectedStrokeWidth,\n}) => {\n  return (\n    <div className={styles.container}>\n      {PEN_STROKE_WIDTH.map((width) => (\n        <div\n          key={`stroke-width-item-${width}`}\n          className={cx(styles.itemWrapper, {\n            [styles.active]: width === selectedStrokeWidth,\n          })}\n          onClick={() => onStrokeWidthItemClick(width)}\n        >\n          <div\n            className={cx(styles.item)}\n            style={{\n              background: `hsl(${selectedColor.hue} ${selectedColor.saturation}% ${selectedColor.lightness}%)`,\n              height: width,\n            }}\n          />\n        </div>\n      ))}\n    </div>\n  );\n};\n\nStrokeWidthPicker.propTypes = {\n  selectedColor: PropTypes.object,\n  onStrokeWidthItemClick: PropTypes.func,\n  selectedStrokeWidth: PropTypes.number,\n};\n\nexport default memo(StrokeWidthPicker);\n","import React, { useCallback, lazy } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport menuActions from 'redux/actions/menu';\nimport { MENU_ITEMS } from 'constants/menu';\nimport ColorPicker from 'components/ColorPicker';\nimport StrokeWidthPicker from 'components/StrokeWidthPicker';\nimport styles from './index.module.scss';\n\nconst MenuItems = lazy(() => import('components/MenuItems'));\n\nconst Menu = (props) => {\n  const dispatch = useDispatch();\n  const color = useSelector((state) => state.menu.color);\n  const selectedMenuItem = useSelector((state) => state.menu.selectedMenuItem);\n  const selectedStrokeWidth = useSelector(\n    (state) => state.menu.selectedStrokeWidth\n  );\n\n  const handleColorUpdate = useCallback(\n    (hsl) => dispatch(menuActions.updateColor(hsl)),\n    [dispatch]\n  );\n\n  const handleMenuItemClick = useCallback(\n    (item) => dispatch(menuActions.toggleMenuItem(item)),\n    [dispatch]\n  );\n\n  const handleStrokeWidthItemClick = useCallback(\n    (width) => dispatch(menuActions.updateStrokeWidth(width)),\n    [dispatch]\n  );\n\n  return (\n    <div className={styles.container}>\n      <MenuItems\n        selectedMenuItem={selectedMenuItem}\n        onMenuItemClick={handleMenuItemClick}\n      />\n      {/* {selectedMenuItem === MENU_ITEMS.COLOR_PICKER && ( */}\n      <ColorPicker\n        hide={selectedMenuItem !== MENU_ITEMS.COLOR_PICKER}\n        onColorUpdate={handleColorUpdate}\n        selectedColor={color}\n      />\n      {/* )} */}\n      {selectedMenuItem === MENU_ITEMS.PEN && (\n        <StrokeWidthPicker\n          selectedColor={color}\n          onStrokeWidthItemClick={handleStrokeWidthItemClick}\n          selectedStrokeWidth={selectedStrokeWidth}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Menu;\n","import React, { memo } from 'react';\nimport styles from './index.module.scss';\n\nconst Header = () => {\n  return (\n    <div className={styles.container}>\n      drawing board\n    </div>\n  );\n};\n\nexport default memo(Header);\n","import React, { Suspense } from 'react';\nimport { useSelector } from 'react-redux';\nimport CanvasBoard from 'containers/CanvasBoard';\nimport Menu from 'containers/Menu';\nimport Header from 'components/Header';\n\nfunction App() {\n  const { hue, saturation, lightness } = useSelector(\n    (state) => state.menu.color\n  );\n  return (\n    <div\n      style={{\n        '--selectedColor': `hsl(${hue} ${saturation}% ${lightness}%)`,\n        '--hue': hue,\n        '--saturation': `${saturation}%`,\n        '--lightness': `${lightness}%`,\n      }}\n    >\n      <Suspense fallback={'loading...'}>\n        <Header />\n        <CanvasBoard />\n        <Menu />\n      </Suspense>\n    </div>\n  );\n}\n\nexport default App;\n","import * as canvasTypes from 'redux/actionTypes/canvas';\n\nconst initState = {\n  init: false,\n};\n\nexport default function(state = initState, { type, payload }) {\n  switch(type) {\n    case canvasTypes.CANVAS_INIT:\n      return {\n        ...state,\n        init: true,\n      };\n    default:\n      return state;\n  }\n}","import * as menuTypes from 'redux/actionTypes/menu';\nimport { PEN_STROKE_WIDTH } from 'constants/menu';\n\nconst initState = {\n  color: {\n    hue: 5,\n    saturation: 10,\n    lightness: 20,\n  },\n  selectedMenuItem: '',\n  selectedStrokeWidth: PEN_STROKE_WIDTH[0],\n};\n\nexport default function menuReducer(state = initState, { type, payload }) {\n  switch(type) {\n    case menuTypes.UPDATE_COLOR:\n      return {\n        ...state,\n        color: payload,\n      };\n    case menuTypes.TOGGLE_MENU_ITEM:\n      return {\n        ...state,\n        selectedMenuItem: payload,\n      };\n    case menuTypes.UPDATE_STROKE_WIDTH:\n      return {\n        ...state,\n        selectedStrokeWidth: payload,\n      }\n    default:\n      return state;\n  }\n}","import { combineReducers } from 'redux';\nimport canvas from './canvas';\nimport menu from './menu';\n\nexport default combineReducers({\n  canvas,\n  menu,\n});\n","import { createStore, applyMiddleware } from 'redux';\nimport rootReducer from 'redux/reducers';\n\nconst bindMiddlewares = middlewares => {\n  if(process.env.NODE_ENV !== 'production') {\n    const { composeWithDevTools } = require('redux-devtools-extension');\n    return composeWithDevTools(applyMiddleware(...middlewares));\n  }\n  return applyMiddleware(...middlewares);\n}\n\nconst store = createStore(rootReducer, bindMiddlewares([]));\n\nexport default store;","const CANVAS_INIT = 'CANVAS_INIT';\n\nexport {\n  CANVAS_INIT,\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './app';\nimport store from './redux/store';\nimport './styles/index.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}